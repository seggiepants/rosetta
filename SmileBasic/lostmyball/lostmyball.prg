
OPTION STRICT
'I LOST MY BALL
'by Stewart / SeggiePants - 2017
'=========================================
'A SMALL TEXT ADVENTURE. MEANT TO BE
'USABLE AS A BASE FOR OTHER LARGER TEXT 
'ADVENTURE GAMES, OR AS A LEARNING TOOL.
'SOMEWHAT OVERGROWN FOR THAT LAST OPTION.
'
'YOU LOST YOUR BALL, NOW YOU HAVE TO VENTURE 
'INTO THE MILDLY UNSETTLING HOUSE TO GET IT 
'BACK, AND HOPE TO MAKE IT BACK OUT AGAIN.
'
VAR NUM_ROOMS%, I%, N%, S%, E%, W%, U%, D%
VAR DESC$, TRAVEL$, GAME_OVER% = FALSE
VAR ROOM% = 0, INP$, INPUT_OK%, IDX_BALL%
VAR WORDS$[0], NUM_OBJS%, OBJS$, TMP$
VAR LOC_INVENTORY% = -2, LOC_USED% = -3
VAR FLASHLIGHT_ON% = FALSE, MAXW% = 50

'LOAD THE ROOM DATA
RESTORE @ROOM_TABLE
READ NUM_ROOMS%

VAR ROOM_DESC$[NUM_ROOMS%]
VAR ROOM_TABLE%[NUM_ROOMS%, 6]

FOR I% = 0 TO NUM_ROOMS% - 1
 READ DESC$, N%, S%, E%, W%, U%, D%
 ROOM_DESC$[I%] = DESC$
 ROOM_TABLE%[I%, 0] = N%
 ROOM_TABLE%[I%, 1] = S%
 ROOM_TABLE%[I%, 2] = E%
 ROOM_TABLE%[I%, 3] = W%
 ROOM_TABLE%[I%, 4] = U%
 ROOM_TABLE%[I%, 5] = D%
NEXT I%

'LOAD THE OBJECT TABLE
RESTORE @OBJECT_TABLE
READ NUM_OBJS%

VAR OBJ_DESC$[NUM_OBJS%]
VAR OBJ_ROOM%[NUM_OBJS%]
VAR OBJ_PICKUP%[NUM_OBJS%], 

FOR I% = 0 TO NUM_OBJS% - 1
 READ DESC$, ROOM%, N%
 OBJ_DESC$[I%] = DESC$
 OBJ_ROOM%[I%] = ROOM%
 OBJ_PICKUP%[I%] = N%
NEXT I%

'LOAD DIRECTION TABLE
RESTORE @DIRECTION_TABLE
READ N%

VAR DIR$[N%]

FOR I% = 0 TO N% - 1
 READ DESC$
 DIR$[I%] = DESC$
NEXT I%

TITLE_SCREEN

'MAIN GAME LOOP
ROOM% = 0 'START AT ROOM 0
IDX_BALL% = GET_OBJ_INDEX("BALL")

WHILE GAME_OVER% == FALSE
 REPEAT 
  PRETTY_PRINT ROOM_DESC$[ROOM%]
  OBJS$ = GET_OBJS$(ROOM%)
  IF LEN(OBJS$) > 0 THEN
   PRINT 
   PRETTY_PRINT "YOU CAN SEE: " + OBJS$
  ENDIF
  
  TRAVEL$ = GET_EXITS$(ROOM%)
  IF LEN(TRAVEL$) > 0 THEN 
   PRETTY_PRINT "YOU CAN GO: " + TRAVEL$
  ENDIF
 
  INPUT_OK% = TRUE
  INPUT "WHAT WILL YOU DO"; INP$
  
  WORDS$ = SPLIT(UCASE$(TRIM$(FILTER_ALPHANUMERIC$(INP$))), " ")

  IF LEN(WORDS$) == 0 THEN
   INPUT_OK% = FALSE
   CONTINUE
  ENDIF 
  
  IF LEN(WORDS$) >= 3 THEN
   IF WORDS$[0] == "PICK" AND WORDS$[1] == "UP" THEN
    TMP$ = SHIFT(WORDS$) 
    WORDS$[0] = "GET"
   ENDIF
  ENDIF
  
  IF WORDS$[0] == "GET" OR WORDS$[0] == "TAKE" OR WORDS$[0] == "OBTAIN" OR WORDS$[0] == "PICK" OR WORDS$[0] == "PICKUP" THEN
   IF LEN(WORDS$) > 1 THEN
    VERB_GET WORDS$[1]
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "WHAT DO YOU WANT TO GET?"
   ENDIF
  ELSEIF WORDS$[0] == "OPEN" OR WORDS$[0] == "UNLOCK" THEN
   IF LEN(WORDS$) > 1 THEN
    VERB_OPEN WORDS$[1]
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "WHAT DO YOU WANT TO OPEN?"
   ENDIF
  ELSEIF WORDS$[0] == "USE" OR WORDS$[0] == "GIVE" OR WORDS$[0] == "ACTIVATE" THEN
   IF LEN(WORDS$) > 1 THEN
    VERB_USE WORDS$[1]
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "WHAT DO YOU WANT TO USE?"
   ENDIF
  ELSEIF LEN(WORDS$) > 1 AND (WORDS$[0] == "GO" OR WORDS$[0] == "MOVE" OR WORDS$[0] == "WALK" OR WORDS$[0] == "RUN" OR WORDS$[0] == "TRAVEL") THEN
   VERB_GO WORDS$[1]
  ELSEIF LEN(WORDS$) == 1 AND IS_MEMBER(DIR$, WORDS$[0]) THEN
   VERB_GO WORDS$[0]
  ELSEIF LEN(WORDS$) == 1 AND (WORDS$[0] == "INVENTORY" OR WORDS$[0] == "INV" OR WORDS$[0] == "I" OR WORDS$[0] == "BAG") THEN
   VERB_INVENTORY
  ELSEIF (WORDS$[0] == "TALK" OR WORDS$[0] == "SPEAK") THEN
   IF LEN(WORDS$) > 1 THEN
    VERB_TALK WORDS$[1]
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "WHO DO YOU WANT TO TALK TO?"
   ENDIF
  ELSEIF WORDS$[0] == "HELP" OR WORDS$[0] == "HINT" OR WORDS$[0] == "ABOUT" THEN
   IF LEN(WORDS$) > 1 THEN
    VERB_HELP WORDS$[1]
   ELSE
    VERB_HELP ""
   ENDIF 
  ELSEIF WORDS$[0] == "DANCE" OR WORDS$[0] == "BOOGIE" THEN
   VERB_DANCE
  ELSEIF WORDS$[0] == "Q" OR WORDS$[0] == "QUIT" OR WORDS$[0] == "X" OR WORDS$[0] == "EXIT" THEN
   VERB_QUIT
  ELSE 
   PRINT "HUH?" : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
  PRINT
  PRINT
 UNTIL INPUT_OK%
 
 IF GAME_OVER% == FALSE AND OBJ_ROOM%[IDX_BALL%] == LOC_INVENTORY% AND ROOM% == 0 THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU DID IT!!"
  PRINT
  PRETTY_PRINT "YOU FOUND YOUR BALL AND ESCAPED THE MILDLY UNSETTLING HOUSE."
  PRINT
  PRINT
  PRETTY_PRINT "YOU WIN!!"
  GAME_OVER% = TRUE
 ENDIF

WEND

WAIT 100

'PRINT 
'PRINT
'PRETTY_PRINT "PRESS îˆ‚ TO EXIT"
'REPEAT
' VSYNC
'UNTIL (BUTTON() AND #B) != 0

END

'HANDLE THE GET VERB
DEF VERB_GET WHAT$
 VAR IDX_ITEM%, IDX_CATNIP%
 IDX_ITEM% = GET_OBJ_INDEX(WHAT$)
 IDX_CATNIP% = GET_OBJ_INDEX("CATNIP")
 
 IF IDX_ITEM% == -1 THEN
  PRINT
  PRINT
  RANDOM_PRINT "YOU CAN'T GET THAT|THERE IS NO " + WHAT$ + " THAT YOU CAN GET|I DON'T THINK SO", "|"
 ELSEIF IDX_ITEM% == LOC_INVENTORY% THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU ALREADY HAVE THAT."
 ELSEIF IDX_ITEM% == LOC_USED% THEN
  PRINT
  PRINT
  PRETTY_PRINT "THERE IS NO MORE TO BE FOUND."
 ELSEIF OBJ_ROOM%[IDX_ITEM%] != ROOM% THEN
  PRINT
  PRINT
  PRETTY_PRINT "I DON'T SEE ANY " + WHAT$ + " AROUND HERE."
 ELSE
  IF ROOM% == 8 AND FLASHLIGHT_ON% == FALSE THEN
   PRINT
   PRINT
   PRETTY_PRINT "IT IS TOO DARK TO SEE DOWN HERE."
  ELSEIF WHAT$ == "CAT" THEN
   IF OBJ_ROOM%[IDX_CATNIP%] == LOC_USED% THEN
    PRINT
    PRINT
    PRETTY_PRINT "YOU QUICKLY PICK UP THE CAT WHILE IT IS DISTRACTED."
    OBJ_ROOM%[IDX_ITEM%] = LOC_INVENTORY%
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "THE CAT HISSES AND CLAWS AT YOU. DISTRACTED, YOU FALL FROM THE TREE TO YOUR DEATH."
    GAME_OVER% = TRUE
    PRINT
    PRETTY_PRINT "GAME OVER."
   ENDIF
  ELSEIF OBJ_PICKUP%[IDX_ITEM%] == FALSE THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU CAN'T PICK THAT UP."
  ELSE
   OBJ_ROOM%[IDX_ITEM%] = LOC_INVENTORY%
   PRINT
   PRINT
   RANDOM_PRINT "YOU GOT THE " + WHAT$ + "!|" + WHAT$ + " OBTAINED|YOU PICKED UP THE " + WHAT$ + "! GOOD FOR YOU!", "|"
  ENDIF
 ENDIF
END

'HANDLE THE SECRET VERB DANCE
DEF VERB_DANCE
 IF ROOM% == 1 THEN
  PRINT
  PRETTY_PRINT "YOUR DANCE MOVES, WHILE GRAND, UNBALACE YOU. YOU FALL FROM THE TREE TO YOUR DEATH. GAME OVER!"
  GAME_OVER% = TRUE
 ELSEIF ROOM% == 3 THEN
  PRINT
  PRETTY_PRINT "DESPITE YOUR AWESOME DANCE MOVES, THE LITTLE GIRL IS UNIMPRESSED."
 ELSEIF ROOM% == 8 THEN
  PRINT
  PRETTY_PRINT "YOUR OUTRAGEOUS DANCE MOVES CAUSE YOU TO TRIP AND FALL IN THE DARK. YOU BROKE YOUR NECK AND DIED. GAME OVER!"
  GAME_OVER% = TRUE
 ELSE
  PRINT
  PRETTY_PRINT "WA HOO! GET DOWN AND BOOGIE, YOU ARE A DANCING MACHINE!"
 ENDIF
END

'HANDLE THE GO COMMAND
DEF VERB_GO DIR$
 VAR IDX_MEAT%, IDX_BALL%
 IF DIR$ == "N" OR DIR$ == "NORTH" THEN
  IF ROOM_TABLE%[ROOM%, 0] >= 0 THEN
   ROOM% = ROOM_TABLE%[ROOM%, 0]
  ELSE
   PRETTY_PRINT BAD_DIR$() : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
 ELSEIF DIR$ == "S" OR DIR$ == "SOUTH" THEN
  IF ROOM_TABLE%[ROOM%, 1] >= 0 THEN
   ROOM% = ROOM_TABLE%[ROOM%, 1]
  ELSE
   PRETTY_PRINT BAD_DIR$() : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
 ELSEIF DIR$ == "E" OR DIR$ == "EAST" THEN
  IF ROOM_TABLE%[ROOM%, 2] >= 0 THEN
   ROOM% = ROOM_TABLE%[ROOM%, 2]
  ELSE
   PRETTY_PRINT BAD_DIR$() : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
 ELSEIF DIR$ == "W" OR DIR$ == "WEST" THEN
  IF ROOM_TABLE%[ROOM%, 3] >= 0 THEN
   ROOM% = ROOM_TABLE%[ROOM%, 3]
  ELSE
   PRETTY_PRINT BAD_DIR$() : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
 ELSEIF DIR$ == "U" OR DIR$ == "UP" THEN
  IF ROOM_TABLE%[ROOM%, 4] >= 0 THEN
   ROOM% = ROOM_TABLE%[ROOM%, 4]
  ELSE
   PRETTY_PRINT BAD_DIR$() : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
 ELSEIF DIR$ == "D" OR DIR$ == "DOWN" THEN
  IF ROOM_TABLE%[ROOM%, 5] >= 0 THEN
   IF ROOM_TABLE%[ROOM%, 5] == 8 THEN
    IDX_MEAT% = GET_OBJ_INDEX("MEAT")
    IF OBJ_ROOM%[IDX_MEAT%] != LOC_USED% THEN
     PRINT
     PRINT
     PRETTY_PRINT "THE DOG GOES WILD!"
     PRETTY_PRINT "IT WAS GUARDING THE CELLAR"
     PRINT
     PRETTY_PRINT "..."
     PRINT
     PRETTY_PRINT "THE DOG KILLED YOU."
     PRINT
     PRETTY_PRINT "GAME OVER!"
     GAME_OVER% = TRUE
    ELSE
     PRINT
     PRINT
     PRETTY_PRINT "THE DOG EYES YOU SUSPICIOUSLY BUT IS TOO BUSY EATING TO STOP YOU."
     ROOM% = ROOM_TABLE%[ROOM%, 5]
    ENDIF
   ELSE
    ROOM% = ROOM_TABLE%[ROOM%, 5]
   ENDIF
  ELSE
   PRETTY_PRINT BAD_DIR$() : WAIT 60
   INPUT_OK% = FALSE
  ENDIF
 ELSE
  PRETTY_PRINT BAD_DIR$() : WAIT 60
  INPUT_OK% = FALSE
 ENDIF 
END

'HANDLE THE HELP VERB. GWNERAL HELP IF NO
'TOPIC SPECIFIED, SPECIFIC HELP IS AVAILABLE
'OTHERWISE
DEF VERB_HELP TOPIC$
 IF TOPIC$ == "" THEN
  PRINT
  PRINT
  PRETTY_PRINT "HELP:"
  PRETTY_PRINT "In this game you lost your ball and must find it and escape again. This is a text adventure game. In this type of game you type in commands on the keyboard (remember to hit Enter/Return). The method is similar to the DOS or UNIX command prompt. The game will attempt to decipher your command and report back any new status or location."
  PRINT
  PRETTY_PRINT "This sort of game was popular in the early days of computing before graphics were standard. They normally focus on puzzles and word problems. Sometimes part of the game is figuring out what commands are available."
  PRINT
  PRETTY_PRINT "For additional information try getting help on one of the topics below."
  PRINT
  PRETTY_PRINT "AVAILABLE COMMANDS: GET, GO, HELP, INVENTORY, OPEN, QUIT, TALK, USE"
 ELSEIF TOPIC$ == "GET" OR TOPIC$ == "TAKE" OR TOPIC$ == "OBTAIN" OR TOPIC$ == "PICK" OR TOPIC$ == "PICKUP" THEN
  HELP_GET
 ELSEIF IS_MEMBER(DIR$, TOPIC$) OR TOPIC$ == "GO" OR TOPIC$ == "MOVE" OR TOPIC$ == "WALK" OR TOPIC$ == "RUN" OR TOPIC$ == "TRAVEL" THEN
  HELP_GO
 ELSEIF TOPIC$ == "HELP" OR TOPIC$ == "HINT" OR TOPIC$ == "ABOUT" THEN
  HELP_HELP
 ELSEIF TOPIC$ == "OPEN" OR TOPIC$ == "UNLOCK" THEN
  HELP_OPEN
 
 ELSEIF TOPIC$ == "TALK" OR TOPIC$ == "SPEAK" THEN
  HELP_TALK
 ELSEIF TOPIC$ == "USE" OR TOPIC$ == "GIVE" OR TOPIC$ == "ACTIVATE" THEN 
  HELP_USE
 ELSEIF TOPIC$ == "INVENTORY" OR TOPIC$ == "INV" OR TOPIC$ == "I" OR TOPIC$ == "BAG" THEN
  HELP_INVENTORY
 ELSEIF TOPIC$ == "Q" OR TOPIC$ == "QUIT" OR TOPIC$ == "X" OR TOPIC$ == "EXIT" THEN
  HELP_QUIT
 ELSE
  PRINT
  PRINT
  PRETTY_PRINT " SORRY, I DON'T HAVE A PAGE FOR " + TOPIC$ +"."
 ENDIF
END

'DESCRIBE THE GO COMMAND
DEF HELP_GO
 PRINT
 PRINT
 PRETTY_PRINT "GO:"
 PRETTY_PRINT "GO is a unique command. It can be use in one and two word format. For the single word format just enter the direction or its abbreviation (N,NORTH,S,SOUTH,E,EAST,W,WEST,U,UP,D,DOWN). For two word mode type GO followed by the desired direction of travel. You may not be able to go in all directions in most locations. Normally a list of available directions you may travel in is printed after the room description."
 PRINT
 PRETTY_PRINT "EXAMPLES N, NORTH, GO NORTH"
 PRINT
 PRETTY_PRINT "ALIASES: GO, MOVE, WALK, RUN, TRAVEL, N, NORTH, S, SOUTH, E, EAST, W, WEST, U, UP, D, OR DOWN." 
END

'DESCRIBE THE GET COMMAND
DEF HELP_GET
 PRINT
 PRINT
 PRETTY_PRINT "GET:"
 PRETTY_PRINT "This command lets you take an item in the current area. It requires a second word describing the item to GET. Some things can not be taken. It can sometimes be difficult to get things without extra preparations. Generally in most text adventure games you get everything possible."
 PRINT
 PRETTY_PRINT "EXAMPLES: GET BALL, TAKE HAMMER."
 PRINT
 PRETTY_PRINT "ALIASES: GET, TAKE, OBTAIN, PICK, OR PICKUP."
END

'HELP FOR THE HELP COMMAND
DEF HELP_HELP
 PRINT
 PRINT
 PRETTY_PRINT "HELP:"
 PRETTY_PRINT "The HELP command will display help information. If you use it without a parameter you get a general help display. If you specify a command as a parameter you get help specific to that command with examples and a list of aliases.
 PRINT
 PRETTY_PRINT "EXAMPLES: HELP, HELP USE"
 PRINT
 PRETTY_PRINT "ALIASES: HELP, HINT, ABOUT"
END

'HELP FOR THE INVENTORY COMMAND
DEF HELP_INVENTORY
 PRINT
 PRINT
 PRETTY_PRINT "INVENTORY:"
 PRETTY_PRINT "The command inventory requires no parameters. It simply displays a list of items you are carrying around. Seeing a list of possessions may help you figure out the next tricky puzzle."
 PRINT
 PRETTY_PRINT "EXAMPLES: INVENTORY, BAG"
 PRINT
 PRETTY_PRINT "ALIASES: INVENTORY, INV, I, OR BAG."

END

'HELP FOR THE OPEN COMMAND
DEF HELP_OPEN
 PRINT
 PRINT
 PRETTY_PRINT "OPEN"
 PRETTY_PRINT "This command lets you either open or unlock an object in either the current area or your inventory. It requires a second word of the object to open. It is usually a good idea to open everything that can be opened."
 PRINT
 PRETTY_PRINT "EXAMPLES: UNLOCK DOOR, OPEN SAFE"
 PRINT
 PRETTY_PRINT "ALIASES: OPEN, OR UNLOCK."
END

'HELP FOR THE QUIT COMMAND
DEF HELP_QUIT
 PRINT
 PRINT
 PRETTY_PRINT "QUIT:"
 PRETTY_PRINT "This command will exit the game. The command does not require parameters. All progress WILL be lost. You will NOT be prompted to confirm your choice."
 PRINT
 PRETTY_PRINT "EXAMPLES: QUIT, EXIT"
 PRINT 
 PRETTY_PRINT "ALIASES: Q, QUIT, X, OR EXIT."
END

'HELP FOR THE TALK COMMAND
DEF HELP_TALK
 PRINT
 PRINT
 PRETTY_PRINT "TALK:"
 PRETTY_PRINT "The TALK command allows you to speak to other characters (human or otherwise) in the game. The command requires a second word specifying the person or object to talk to. This can often give you important clues. Be sure to talk to anyone or anything that will listen."
 PRINT
 PRETTY_PRINT "EXAMPLES: TALK JUDGE, SPEAK GUARD."
 PRINT
 PRETTY_PRINT "ALIASES: TALK, OR SPEAK."
END

'HELP FOR THE USE COMMAND
DEF HELP_USE
 PRINT
 PRINT
 PRETTY_PRINT "USE"
 PRETTY_PRINT "This command lets you use an object in your inventory or the current area. It requires a second word whis is the name of the object to use. Using an object may consume or use up the object. Be careful to use things in the right place and time. Generally you will need to use the all items you pick up at some point in the game."
 PRINT
 PRETTY_PRINT "EXAMPLES: USE GUN, GIVE CROWN"
 PRINT
 PRETTY_PRINT "ALIASES: USE, GIVE, OR ACTIVATE."
END

'PRINT OUT YOUR INVENTORY
DEF VERB_INVENTORY
 VAR I%, RET$ = ""
 
 FOR I% = 0 TO NUM_OBJS% - 1
  IF OBJ_ROOM%[I%] == LOC_INVENTORY% THEN
   RET$ = RET$ + ", " + OBJ_DESC$[I%]
  ENDIF
 NEXT I%
 
 IF LEN(RET$) == 0 THEN
  RET$ = "YOU AREN'T HOLDING ANYTHING."
 ELSE
  RET$ = "YOU HAVE: " + MID$(RET$, 2, LEN(RET$) - 2)
 ENDIF
 
 PRINT
 PRINT
 PRETTY_PRINT RET$
 
END

'HANDLE THE OPEN VERB
DEF VERB_OPEN WHAT$
 VAR IDX_KEY%, IDX_SAFE%, IDX_WHAT%
 
 IDX_WHAT% = GET_OBJ_INDEX(WHAT$)
 IF WHAT$ == "FLASHLIGHT" THEN
  CHECK_FLASHLIGHT
 ELSEIF WHAT$ == "SAFE" THEN
  CHECK_SAFE
 ELSEIF IDX_WHAT% != -1 THEN
  PRINT
  PRINT
  IF OBJ_ROOM%[IDX_WHAT%] == LOC_USED% THEN
   PRETTY_PRINT "YOU ARE ALL OUT OF " + WHAT$ + "."
  ELSEIF OBJ_ROOM%[IDX_WHAT%] == LOC_INVENTORY% THEN
   PRETTY_PRINT "YOU HAVE " + WHAT$ + " IN YOUR INVENTORY, BUT IT ISN'T SOMETHING YOU CAN OPEN."
  ELSE
   PRINT WHAT$ + " IS NOT SOMETHING YOU CAN OPEN."
  ENDIF
 ELSE
  PRINT
  PRINT
  RANDOM_PRINT "NOT AN INTERACTABLE OBJECT.|IS THAT AROUND HERE?|SORRY YOU CAN'T DO THAT"
 ENDIF
END

'HANDLE THE QUIT VERB
DEF VERB_QUIT
 PRINT
 PRINT
 PRINT "GOOD BYE"
 GAME_OVER% = TRUE
END

'HANDLE THE TALK VERB.
DEF VERB_TALK WHO$
 VAR IDX_CAT%, IDX_CATNIP%, IDX_DOG%
 VAR IDX_MEAT%, IDX_GIRL%, IDX_WHO%
 IDX_CAT% = GET_OBJ_INDEX("CAT")
 IDX_CATNIP% = GET_OBJ_INDEX("CATNIP")
 IDX_DOG% = GET_OBJ_INDEX("DOG")
 IDX_GIRL% = GET_OBJ_INDEX("GIRL")
  
 IF ROOM% == OBJ_ROOM%[IDX_GIRL%] AND WHO$ == "GIRL" THEN
  IF OBJ_ROOM%[IDX_CAT%] != LOC_INVENTORY% AND OBJ_ROOM%[IDX_CAT%] != LOC_USED% THEN
   PRINT
   PRINT
   PRETTY_PRINT "THE SAD LITTLE GIRL SAYS:"
   PRETTY_PRINT "OH IT IS AWFUL! I HAVE LOST MY CAT! I CAN'T FIND HER ANYWHERE. PLEASE HELP ME FIND MY CAT."
  ELSEIF OBJ_ROOM%[IDX_CAT%] == LOC_INVENTORY% THEN
   RETURN_CAT
  ELSE
   PRINT
   PRINT
   PRETTY_PRINT "THE LITTLE GIRL SAYS:"
   PRETTY_PRINT "WHY ARE YOU IN MY ROOM? GET OUT!"
   PRINT
   PRETTY_PRINT "YOU ARE PUSHED OUT OF THE ROOM"
   ROOM% = 2
  ENDIF
 ELSEIF WHO$ == "CAT" AND (OBJ_ROOM%[IDX_CAT%] == ROOM% OR OBJ_ROOM%[IDX_CAT%] == LOC_INVENTORY%) THEN
   IDX_CATNIP% = GET_OBJ_INDEX("CATNIP")
   IF OBJ_ROOM%[IDX_CATNIP%] == LOC_USED% THEN
    PRINT
    PRINT
    RANDOM_PRINT "THE CAT SAYS: MEOW|THE CAT IGNORES YOU", "|"
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "THE CAT HISSES AT YOU FIERCELY!"
   ENDIF
 ELSEIF WHO$ == "DOG" AND OBJ_ROOM%[IDX_DOG%] == ROOM% THEN
   IDX_MEAT% = GET_OBJ_INDEX("MEAT")
   IF OBJ_ROOM%[IDX_MEAT%] == LOC_USED% THEN
    PRINT
    PRINT
    PRETTY_PRINT "THE DOG IS BUSY EATING ITS MEAT AND IGNORES YOU"
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "THE DOG BARKS AT YOU WILDLY! YOU ARE CHASED OUT OF THE ROOM"
    ROOM% = 2
   ENDIF
 ELSE
  IDX_WHO% = GET_OBJ_INDEX(WHO$) 
  IF IDX_WHO% != -1 THEN
   PRINT
   PRINT
   IF OBJ_ROOM%[IDX_WHO%] == LOC_INVENTORY% OR OBJ_ROOM%[IDX_WHO%] == ROOM% THEN
    RANDOM_PRINT "YOU CAN TALK TO A " + WHO$ + ", BUT IT WON'T RESPOND.|WHY ARE YOU TALKING TO INANIMATE OBJECTS?", "|"
   ELSE
    PRINT
    PRINT
    PRETTY_PRINT "THERE IS NO " + WHO$ + " TO TALK TO HERE."
   ENDIF
  ELSE
   PRINT
   PRINT
   PRETTY_PRINT "WHAT ARE YOU TALKING TO? I DON'T SEE A " + WHO$ + " TO TALK TO."
  ENDIF
 ENDIF
END

'HANDLE THE USE VERB
DEF VERB_USE WHAT$
 VAR IDX_CAT%, IDX_CATNIP%, IDX_DOG%
 VAR IDX_KEY%, IDX_MEAT%, IDX_SAFE%
 VAR IDX_FLASHLIGHT%, IDX_BATTERIES%
 VAR IDX_GIRL%, IDX_WHAT%
 
 IDX_WHAT% = GET_OBJ_INDEX(WHAT$)
 IF WHAT$ == "FLASHLIGHT" THEN
  TOGGLE_FLASHLIGHT
 ELSEIF WHAT$ == "KEY" THEN
  IDX_KEY% = GET_OBJ_INDEX("KEY")
  IDX_SAFE% = GET_OBJ_INDEX("SAFE")
  IF OBJ_ROOM%[IDX_KEY%] != LOC_INVENTORY% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU DON'T HAVE A KEY TO USE"
  ELSEIF OBJ_ROOM%[IDX_SAFE%] != ROOM% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU CAN'T USE THAT HERE."
  ELSE
   CHECK_SAFE
  ENDIF
 ELSEIF WHAT$ == "CATNIP" THEN
  IDX_CAT% = GET_OBJ_INDEX("CAT")
  IDX_CATNIP% = GET_OBJ_INDEX("CATNIP")
  IF OBJ_ROOM%[IDX_CATNIP%] == LOC_USED% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU ALREADY USED UP YOUR CATNIP."
  ELSEIF OBJ_ROOM%[IDX_CATNIP%] != LOC_INVENTORY% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU DON'T HAVE ANY CATNIP."
  ELSEIF OBJ_ROOM%[IDX_CAT%] != ROOM% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU CAN'T USE THAT HERE."
  ELSE
   PRINT
   PRINT
   PRETTY_PRINT "YOU GIVE THE CATNIP TO THE CAT. IT LOVES THE CATNIP AND APPEARS TO BE DISTRACTED."
   IF IDX_CATNIP% >= 0 THEN
    OBJ_ROOM%[IDX_CATNIP%] = LOC_USED%
   ENDIF
  ENDIF
 ELSEIF WHAT$ == "MEAT" THEN
  IDX_DOG% = GET_OBJ_INDEX("DOG")
  IDX_MEAT% = GET_OBJ_INDEX("MEAT")
  IF OBJ_ROOM%[IDX_MEAT%] == LOC_USED% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU ALREADY USED UP YOUR MEAT."
  ELSEIF OBJ_ROOM%[IDX_MEAT%] != LOC_INVENTORY% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU DON'T HAVE ANY MEAT."
  ELSEIF OBJ_ROOM%[IDX_DOG%] != ROOM% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU CAN'T USE THAT HERE."
  ELSE
   PRINT
   PRINT
   PRETTY_PRINT "YOU GIVE THE MEAT TO THE DOG. IT LOVES THE MEAT AND APPEARS TO BE DISTRACTED."
   IF IDX_MEAT% >= 0 THEN
    OBJ_ROOM%[IDX_MEAT%] = LOC_USED%
   ENDIF
  ENDIF
 ELSEIF WHAT$ == "BATTERIES" THEN
  IDX_FLASHLIGHT% = GET_OBJ_INDEX("FLASHLIGHT")
  IDX_BATTERIES% = GET_OBJ_INDEX("BATTERIES")
  IF OBJ_ROOM%[IDX_BATTERIES%] == LOC_USED% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU ALREADY USED YOUR BATTERIES."
  ELSEIF OBJ_ROOM%[IDX_BATTERIES%] != LOC_INVENTORY% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU DON'T HAVE ANY BATTERIES."
  ELSEIF OBJ_ROOM%[IDX_FLASHLIGHT%] != LOC_INVENTORY% THEN
   PRINT
   PRINT
   PRETTY_PRINT "NOTHING TO USE BATTERIES WITH."
  ELSE
   CHECK_FLASHLIGHT
  ENDIF
 ELSEIF WHAT$ == "CAT" THEN
  IDX_CAT% = GET_OBJ_INDEX("CAT")
  IDX_GIRL% = GET_OBJ_INDEX("GIRL")
  IF OBJ_ROOM%[IDX_CAT%] == LOC_USED% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU ALREADY RETURNED THE CAT."
  ELSEIF OBJ_ROOM%[IDX_CAT%] != LOC_INVENTORY% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU DON'T HAVE A CAT."
  ELSEIF OBJ_ROOM%[IDX_GIRL%] != ROOM% THEN
   PRINT
   PRINT
   PRETTY_PRINT "YOU CAN'T USE THAT HERE."
  ELSE
   RETURN_CAT
  ENDIF
 ELSEIF IDX_WHAT% >= 0 THEN
  PRINT
  PRINT
  IF OBJ_ROOM%[IDX_WHAT%] == LOC_USED% THEN
   PRETTY_PRINT "YOU ARE ALL OUT OF " + WHAT$ + "."
  ELSEIF OBJ_ROOM%[IDX_WHAT%] != LOC_INVENTORY% THEN
   PRETTY_PRINT "YOU DON'T HAVE ONE TO USE."
  ELSE
   PRETTY_PRINT "SORRY YOU CAN'T USE THE " + WHAT$ + "."
  ENDIF
 ENDIF
END

'INSPECT THE FLASHLIGHT. COMBINE WITH THE
'BATTERIES IF AVAILABLE AND NOT DONE 
'PREVIOUSLY
DEF CHECK_FLASHLIGHT
 VAR IDX_FLASHLIGHT%, IDX_BATTERIES%

 IDX_FLASHLIGHT% = GET_OBJ_INDEX("FLASHLIGHT")
 IDX_BATTERIES% = GET_OBJ_INDEX("BATTERIES")

 IF OBJ_ROOM%[IDX_FLASHLIGHT%] != LOC_INVENTORY% THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU DON'T HAVE A FLASHLIGHT"
 ELSEIF OBJ_ROOM%[IDX_BATTERIES%] == LOC_USED% THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU OPEN THE FLASHLIGHT. NOTE THAT THE BATTERIES ARE IN PROPERLY AND CLOSE IT UP AGAIN."
 ELSEIF OBJ_ROOM%[IDX_BATTERIES%] == LOC_INVENTORY% THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU OPEN THE FLASHLIGHT. THERE ARE NO BATTERIES INSIDE. YOU CLEVERLY DECIDE TO COMBINE IT WITH THE BATTERIES IN YOUR INVENTORY."
  OBJ_ROOM%[IDX_BATTERIES%] = LOC_USED%
  PRINT
  PRETTY_PRINT "CONGRATULATIONS! YOU NOW HAVE A WORKING FLASHLIGHT."
 ELSE
  PRINT
  PRINT
  PRETTY_PRINT "YOU OPEN THE FLASHLIGHT. YOU SEE THAT THERE ARE NO BATTERIES INSIDE. IT WON'T WORK IN THIS CONDITION. YOU DECIDE TO CLOSE IT UP AGAIN."
 ENDIF
END

'TURN THE FLASHLIGHT ON/OFF IF AVAILABLE
DEF TOGGLE_FLASHLIGHT
 VAR IDX_FLASHLIGHT%, IDX_BATTERIES%, OBJS$

 IDX_FLASHLIGHT% = GET_OBJ_INDEX("FLASHLIGHT")
 IDX_BATTERIES% = GET_OBJ_INDEX("BATTERIES")

 IF OBJ_ROOM%[IDX_FLASHLIGHT%] != LOC_INVENTORY% THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU DON'T HAVE A FLASHLIGHT"
 ELSEIF OBJ_ROOM%[IDX_BATTERIES%] == LOC_USED% THEN
  PRINT
  PRINT
  IF FLASHLIGHT_ON% == TRUE THEN
   PRETTY_PRINT "YOU TURN THE FLASHLIGHT OFF."
   FLASHLIGHT_ON% = FALSE
  ELSE
   PRETTY_PRINT "YOU TURN ON THE FLASHLIGHT AND LOOK AROUND,"
   FLASHLIGHT_ON% = TRUE
   OBJS$ = GET_OBJS$(ROOM%)
   IF LEN(OBJS$) > 0 THEN
    PRETTY_PRINT "YOU CAN SEE: " + OBJS$
   ENDIF
  ENDIF
 ELSE
  PRINT
  PRINT
  PRETTY_PRINT "THE FLASHLIGHT NEEDS BATTERIES"
 FLASHLIGHT_ON% = FALSE
 ENDIF
END

'HANDLE OPENING THE SAFE IF POSSIBLE
'CALLED FOM USE(KEY) AND OPEN(SAFE)
DEF CHECK_SAFE
 VAR IDX_SAFE%, IDX_KEY%, IDX_BATTERIES%

 IDX_SAFE% = GET_OBJ_INDEX("SAFE")
 IDX_KEY% = GET_OBJ_INDEX("KEY")
 IDX_BATTERIES% = GET_OBJ_INDEX("BATTERIES")
 
 IF OBJ_ROOM%[IDX_SAFE%] != ROOM% THEN
  PRINT
  PRINT
  PRETTY_PRINT "THERE IS NO SAFE IN HERE TO OPEN"
 ELSEIF OBJ_ROOM%[IDX_KEY%] == LOC_USED% THEN
  PRINT
  PRINT
  PRETTY_PRINT "THE SAFE IS ALREADY OPEN. NOTHING MORE OF USE IS INSIDE"
 ELSEIF OBJ_ROOM%[IDX_KEY%] == LOC_INVENTORY% THEN
  PRINT
  PRINT
  PRETTY_PRINT "YOU PUT THE KEY IN THE LOCK."
  PRETTY_PRINT "TURN THE KEY AND"
  PRETTY_PRINT "..."
  PRETTY_PRINT "OPEN THE SAFE."
  
  IF IDX_BATTERIES% >= 0 THEN
   OBJ_ROOM%[IDX_BATTERIES%] = LOC_INVENTORY%
  ENDIF
  
  IF IDX_KEY% >= 0 THEN
   OBJ_ROOM%[IDX_KEY%] = LOC_USED%
  ENDIF
  
  PRINT
  PRETTY_PRINT "INSIDE THE SAFE YOU FOUND..."
  PRETTY_PRINT "BATTERIES."
  PRETTY_PRINT "YOU ADD THE BATTERIES TO YOUR INVENTORY."
  PRETTY_PRINT "THE KEY IS STUCK IN THE LOCK, OH WELL."
 ELSE
  PRINT
  PRINT
  PRETTY_PRINT "YOU NEED A KEY TO OPEN THE SAFE."
 ENDIF
END

'RETURN THE CAT TO THE LITTLE GIRL
'CALLED FROM TALK, AND USE
DEF RETURN_CAT
 VAR IDX_KEY%, IDX_CAT%
 
 IDX_CAT% = GET_OBJ_INDEX("CAT")
 IDX_KEY% = GET_OBJ_INDEX("KEY")  
 PRINT
 PRINT
 PRETTY_PRINT "THE LITTLE GIRL SAYS:"
 PRETTY_PRINT "OH! THANK YOU! THANK YOU! YOU FOUND MY CAT!"
 PRINT 
 PRETTY_PRINT "FOR A REWARD, PLEASE ACCEPT THIS TOKEN OF MY APPRECIATION"
   
 IF IDX_CAT% != -1 THEN
  OBJ_ROOM%[IDX_CAT%] = LOC_USED%
 ENDIF
   
 IF IDX_KEY% != -1 THEN
  OBJ_ROOM%[IDX_KEY%] = LOC_INVENTORY%
 ELSE 
  PRINT "KEY ERROR"
 ENDIF
   
 PRINT
 PRETTY_PRINT "YOU GOT A KEY."
END

'PRINT OUT THE INTRODUCTION / TITLE SCREEN
DEF TITLE_SCREEN
 CLS
 CENTER_PRINT "I LOST MY BALL"
 CENTER_PRINT "=============="
 PRINT
 CENTER_PRINT "a Text Adventure game."
 PRINT
 PRETTY_PRINT "YOU WERE PLAYING SPORTS WITH YOUR FRIENDS, WHEN YOUR BALL WENT BOUNCING AWAY. YOU SAW IT LAND SOMEWHERE NEAR THE MILDLY UNSETTLING HOUSE. IT IS YOUR JOB TO GET IT BACK AND ESCAPE THE HOUSE."
 PRINT
 PRINT "GOOD LUCK."
 PRINT
 PRETTY_PRINT "TYPE HELP FOR MORE INFORMATION ON COMMANDS AND HOW TO PLAY."
 PRINT 
 PRINT
END

'PRINT A LINE OF TEXTED CENTERED HORIZONTALLY
DEF CENTER_PRINT MSG$
 IF LEN(MSG$) >= MAXW% THEN
  PRETTY_PRINT MSG$
 ELSE
  IF CSRX != 0 THEN PRINT
  PRINT " " * ((MAXW% - LEN(MSG$))/2) + MSG$
 ENDIF 
END

'RETURN A RANDOM PHRASE FOR A INVALID 
'DIRECTION REAPONSE. SHOULD JUST USE
'RANDOM_PRINT
DEF BAD_DIR$()
 VAR I% = RND(4)
 IF I% == 0 THEN
  RETURN "YOU CAN'T GO THAT WAY"
 ELSEIF I% == 1 THEN
  RETURN "SORRY, THAT WON'T WORK"
 ELSEIF I% == 2 THEN
  RETURN "YOU CAN'T MOVE THERE"
 ELSE
  RETURN "THERE IS NOWHERE TO GO IN THAT DIRECTION"
 ENDIF
END 

'RETURN A COMMA SEPARATED LIST OF DIRECTIONS 
'THE USER CAN TRAVEL
DEF GET_EXITS$(ROOM%)
 VAR RET$ = ""
 IF ROOM_TABLE%[ROOM%, 0] >= 0 THEN RET$ = RET$ + ", NORTH"
 IF ROOM_TABLE%[ROOM%, 1] >= 0 THEN RET$ = RET$ + ", SOUTH"
 IF ROOM_TABLE%[ROOM%, 2] >= 0 THEN RET$ = RET$ + ", EAST"
 IF ROOM_TABLE%[ROOM%, 3] >= 0 THEN RET$ = RET$ + ", WEST"
 IF ROOM_TABLE%[ROOM%, 4] >= 0 THEN RET$ = RET$ + ", UP"
 IF ROOM_TABLE%[ROOM%, 5] >= 0 THEN RET$ = RET$ + ", DOWN"

 IF LEN(RET$) > 0 THEN
  RETURN MID$(RET$, 2, LEN(RET$) - 2)
 ELSE
  RETURN ""
 ENDIF
END

'RETURN A DESCRIPTION OF OBJECTS IN A GIVEN 
'ROOM
DEF GET_OBJS$(ROOM%)
 VAR RET$, I%

 IF ROOM% == 8 AND FLASHLIGHT_ON% == FALSE THEN
  RETURN "IT IS TOO DARK TO SEE ANYTHING"
 ELSE 
  FOR I% = 0 TO NUM_OBJS% - 1
   IF OBJ_ROOM%[I%] == ROOM% THEN
    RET$ = RET$ + ", " + OBJ_DESC$[I%]
   ENDIF
  NEXT I%
 
  IF LEN(RET$) > 0 THEN
   RETURN MID$(RET$, 2, LEN(RET$) - 2)
  ELSE
   RETURN ""
  ENDIF
 ENDIF
END

'SEARCH FOR AN OBJECT WITH A GIVEN NAME.
'RETURN -1 IF NOT FOUND, INDEX FOUND AT 
'OTHERWISE
DEF GET_OBJ_INDEX(DESC$)
 VAR I%, RET% = -1

 FOR I% = 0 TO NUM_OBJS% - 1
  IF OBJ_DESC$[I%] == DESC$ THEN
   RET% = I%
   BREAK
  ENDIF
 NEXT I%
 
 RETURN RET%

END

'PRINT A RANDOM RESPONSE FROM A DELIMITED
'STRING
DEF RANDOM_PRINT OPTIONS$, DELIM$
 VAR RESP$[0]
 
 RESP$ = SPLIT(OPTIONS$, DELIM$)
 IF LEN(RESP$) == 0 THEN
  PRINT "WHAT?!"
 ELSE
  PRETTY_PRINT RESP$[RND(LEN(RESP$))]
 ENDIF
END

'PRINT A LONG STRING WITH NICE LINE BREAKS 
'ON WORD BOUNDARIES
DEF PRETTY_PRINT MSG$
 VAR I%, OFS% = 0
 
 WHILE OFS% < LEN(MSG$)
  I% = MIN(LEN(MSG$) - OFS%, MAXW% - CSRX)
  WHILE I% > 0 AND MID$(MSG$, I% + OFS%, 1) != " " AND I% + OFS% < LEN(MSG$)
   DEC I%
  WEND
  PRINT MID$(MSG$, OFS%, I%)
  INC OFS%, I% + 1
 WEND
END

'RETURN THE GIVEN STRING EXCEPT WITH 
'WHITE SPACE CHARACTERS REMOVED FROM THE 
'STRINGS BEGINNING AND END.
DEF TRIM$(MSG$)
 DIM I%, J%, CH$
 IF LEN(MSG$) > 0 THEN
  I% = 0
  J% = LEN(MSG$) - 1
  CH$ = MID$(MSG$, I%, 1)
  WHILE CH$ == " " OR CH$ == CHR$(9) OR CH$ == CHR$(10) OR CH$ == CHR$(13)
   I% = I% + 1
   IF I% >= J% THEN BREAK
   CH$ = MID$(MSG$, I%, 1)
  WEND
 
  CH$ = MID$(MSG$, J%, 1)
  WHILE CH$ == " " OR CH$ == CHR$(9) OR CH$ == CHR$(10) OR CH$ == CHR$(13)
   J% = J% - 1
   IF J% <= I% THEN BREAK
   CH$ = MID$(MSG$, J%, 1)
  WEND
 
  RETURN MID$(MSG$, I%, J% - I% + 1)
 ELSE
  RETURN ""
 ENDIF
END

'SPLIT A GIVEN STING DELIMITED BY DELIMITER
'RETURNS A STRING ARRAY
DEF SPLIT(MSG$, DELIM$)
 VAR RET$[0], CH$, WORD$, I%
 FOR I% = 0 TO LEN(MSG$) - 1
  CH$ = MID$(MSG$, I%, 1)
  IF CH$ == DELIM$ THEN
   IF LEN(WORD$) > 0 THEN
    PUSH RET$, WORD$
    WORD$ = ""
   ENDIF
  ELSE
   WORD$ = WORD$ + CH$
  ENDIF
 NEXT I%
 
 IF LEN(WORD$) > 0 THEN PUSH RET$, WORD$
 
 RETURN RET$
END

'RETURN A COPY OF THE INPUT STRING
'WITH EVERYTHING BUT ALPHANUMERICS REMOVED
DEF FILTER_ALPHANUMERIC$(MSG$)
 VAR RET$ = "", CH$, I%
 FOR I% = 0 TO LEN(MSG$) - 1
  CH$ = MID$(MSG$, I%, 1)
  IF (CH$ >= "A" AND CH$ <= "Z") OR (CH$ >= "a" AND CH$ <= "z") OR CH$ == " " OR CH$ == CHR$(13) OR CH$ == CHR$(10) OR CH$ == CHR$(9) THEN
   RET$ = RET$ + CH$
  ENDIF
 NEXT I%
 
 RETURN RET$
END

'CHECK TO SEE IF A GIVEN STRING DATA$ EXISTS
'WITHIN THE ARRAY TABLE$
DEF IS_MEMBER(TABLE$[], DATA$)
 VAR I%, RET% = FALSE
 
 FOR I% = 0 TO LEN(TABLE$) - 1
  IF TABLE$[I%] == DATA$ THEN
   RET% = TRUE
   BREAK
  ENDIF
 NEXT I%
 
 RETURN RET%
END

'RETURN GIVEN STRING IN ALL UPPER CASE
DEF UCASE$(MSG$)
 VAR I%, CH$, RET$
 
 FOR I% = 0 TO LEN(MSG$) - 1
  CH$ = MID$(MSG$, I%, 1)
  IF ASC(CH$) >= ASC("a") AND ASC(CH$) <= ASC("z") THEN
    RET$ = RET$ + CHR$(ASC("A") - ASC("a") + ASC(CH$))
  ELSE
   RET$ = RET$ + CH$
  ENDIF
 NEXT I%
 
 RETURN RET$
END

@ROOM_TABLE
'DESCRIPTION FOLLOWED BY WHICH ROOM YOU GET 
'TO BY EACH DIRECTION (NSEWUD). -1 = CAN'T 
'GO THAT WAY
DATA 9 '9 ROOMS
'0 - ENTRANCE
DATA "YOU STAND AT THE OPEN DOORWAY OF THE MILDLY UNSETTLING HOUSE. A TREE TOWERS ABOVE YOU, THE FRONT DOOR IS TO THE EAST, AND A PATHWAY SOUTH LEADS TO A SMALL GARDEN"
DATA -1, 4, 2, -1, 1, -1
'1 - UP A TREE
DATA "YOU FIND YOURSELF UP HIGH IN A LARGE TREE. DOWN BELOW YOU IS THE MILDLY UNSETTLING HOUSE."
DATA -1, -1, -1, -1, -1, 0
'2 - LIVING ROOM
DATA "YOU ARE IN THE LIVING ROOM, BUT NOBODY SEEMS TO BE AROUND. TO THE EAST IS A BEDROOM, NORTH THE GARAGE, SOUTH THE KITCHEN, AND WEST HEADS BACK TO THE ENTRANCE"
DATA 7, 5, 3, 0, -1, -1
'3 - CHILDS BEDROOM
DATA "YOU ARE IN A BEDROOM BELONGING TO A LITTLE GIRL. THE LIVING ROOM IS TO THE WEST"
DATA -1, -1, -1, 2, -1, -1
'4 - GARDEN
DATA "YOU FIND YOURSELF IN A SMALL OVERGROWN GARDEN. THE MAIN ENTRANCE IS TO YOUR NORTH, AND AN ENTRANCE TO THE KITCHEN TO THE EAST"
DATA 0, -1, 5, -1, -1, -1
'5 - KITCHEN
DATA "A MESSY KITCHEN IN NEED OF A GOOD CLEANING SURROUNDS YOU. NORTH LEADS TO THE LIVING ROOM, WEST TO THE GARDEN, AND EAST TO THE BATHROOM"
DATA 2, -1, 6, 4, -1, -1
'6 - BATHROOM
DATA "YOU FIND YOURSELF IN A SMELLY BATHROOM. THE KITCHEN IS TO YOUR WEST"
DATA -1, -1, -1, 5, -1, -1
'7 - GARAGE
DATA "A CAVERNOUS GARAGE LOOMS AROUND YOU. YOU CAN RETURN SOUTH TO THE LIVING ROOM, OR GO DOWN TO THE CELLAR FROM HERE"
DATA -1, 2, -1, -1, -1, 8
'8 - CELLAR
DATA "BLACKNESS FILLS THE DARK CELLAR. YOU CAN CLIMB UP INTO THE GARAGE."
DATA -1, -1, -1, -1, 7, -1
 
@OBJECT_TABLE
'NAME, LOCATION, PICKUPABLE
'LOCATION -2 = INVENTORY, -3 = USED/CONSUMED
'IF LARGER THAN MAX ROOM NUMBER THEN IT IS 
'SPECIAL/GIVEN/OFF-MAP
DATA 10
DATA "CAT", 1, TRUE
DATA "CATNIP", 4, TRUE
DATA "SAFE", 2, FALSE
DATA "KEY", 10, TRUE
DATA "BATTERIES", 10, TRUE
DATA "MEAT", 5, TRUE
DATA "FLASHLIGHT", 6, TRUE
DATA "DOG", 7, FALSE
DATA "BALL", 8, TRUE
DATA "GIRL", 3, FALSE

@DIRECTION_TABLE
'LIST OF DIRECTIONS, JUST TO TEST PRETTIER
DATA 12
DATA "N", "NORTH", "S", "SOUTH", "E", "EAST"
DATA "W", "WEST", "U", "UP", "D", "DOWN"


